syntax = "proto3";
package fiamma.zkpverify;

option go_package = "github.com/fiamma-chain/fiamma/x/zkpverify/types";

// VerificationStatus is the verification status enum for the proof verification
enum VerificationStatus { 
  INITIAL_VALIDATION = 0;
  SOFT_FINALITY = 1;
  HARD_FINALITY = 2;
}

// DataLocation is the proof data location enum for the proof verification
enum DataLocation {
  FIAMMA = 0; 
  NUBIT = 1;
  CELESTIA = 2;
  AVAIL = 3;
}

// ProofSystem is the proof system enum for the proof verification
enum ProofSystem {
  GROTH16_BN254_BITVM = 0; 
  FFPLONK_BN254_BITVM = 1;
}

// DASubmissionResult is the data structure for the DA submission result
message DASubmissionResult {
  string proof_id = 1;
  DataLocation data_location = 2;
  string block_hash = 3;
  uint64 block_height = 4;
  string tx_hash = 5;
  string namespace = 6;
}

// DASubmissionData is the data structure for the DA submission data
message DASubmissionData {
  string proof_id = 1;
  ProofData proof_data = 2;
}


// ProofData is the data structure for the proof verification request
message ProofData {
  ProofSystem proof_system = 1;
  bytes proof = 2;
  bytes public_input = 3;
  bytes vk = 4;
  DataLocation data_location = 5;
  string namespace = 6;
}

// VerifyResult is the data structure for the proof verification result
message VerifyResult {
  string proof_id = 1;
  ProofSystem proof_system = 2;
  bool result = 3;  
  VerificationStatus status = 4;
  uint64 community_verification_count = 5;
  string namespace = 6;
}

// BitVMChallengeData is the data structure for the bitvm challenge data
message BitVMChallengeData {
  bytes witness = 1;
  bytes vk = 2;
  string proposer = 3;
}